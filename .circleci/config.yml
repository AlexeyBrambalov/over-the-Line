version: 2.1

commands:
  s3deploy_production:
    description: "Deploy to S3"
    parameters:
      to:
        type: string
      cf_distribution_id:
        type: string
    steps:
      - run: |
          aws configure set preview.cloudfront true
      - run: |
          aws s3 sync ./production s3://<< parameters.to >> \
            --acl public-read --delete \
            --cache-control max-age=31536000
      - run: |
          aws cloudfront create-invalidation \
              --distribution-id << parameters.cf_distribution_id >> \
              --paths /\*

jobs:
  backend_build:
    working_directory: ~/backend
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Install dependencies
          command: cd backend && npm install
      - run:
          name: Lint project
          command: cd backend && npm run lint
      - run:
          name: Set env variables
          command: cd backend && echo 'export VERSION=$(echo $CIRCLE_SHA1 | cut -c -7)' >> $BASH_ENV
      - run:
          name: Docker build api
          command: |
            cd backend && docker build -t $CYF_PRIVATE_REPO/otl-be:$VERSION --build-arg version=$VERSION .
            docker tag $CYF_PRIVATE_REPO/otl-be:$VERSION $CYF_PRIVATE_REPO/otl-be:latest
      - run:
          name: Install some dependencies
          command: |
            sudo apt update
            sudo apt install -y python3 python3-pip python3-setuptools groff
            sudo pip3 install --upgrade pip
      - run:
          name: Install awscli
          command: sudo pip install awscli
      - run:
          name: Docker login to CYF Repo
          command: $(aws ecr get-login --no-include-email)
      - run:
          name: Docker push containers
          command: |
            docker push $CYF_PRIVATE_REPO/otl-be

  frontend_build:
    working_directory: ~/frontend
    docker:
      - image: circleci/node:latest
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: cd frontend && npm install
      - run:
          name: Lint project
          command: cd frontend && npm run lint
      - run:
          name: frontend_build
          command: cd frontend && npm run build

workflows:
  version: 2

  my_workflow:
    jobs:
      - backend_build:
          context: build
      - frontend_build:
          requires:
            - backend_build
